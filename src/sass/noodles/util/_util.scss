@use "sass:list";
@use "./variables" as *;
@use "./fonts" as *;

*,
*::after,
*::before {
  box-sizing: border-box;
  color: $black;
  margin: 0;
}

body {
  font-family: $font-primary;
}

section {
  margin: auto;
  // width: 98vw;
}

ul,
ol {
  padding: 0;
  list-style-type: none;
}

ul,
ol,
li {
  list-style: none;
}

a {
  text-decoration: none;
}

hr {
  border: 0;
  border-top: 1px dotted #efefef;
}

img {
  // max-width: 100%;
}

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if ($k == "default") {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }

      // @debug $v;
      @if (map-has-key($alignment, $property)) {
        @if ($v != 0) {
          .#{$prefix}-x-#{$k} {
            #{$property}-left: $v;
            #{$property}-right: $v;
          }

          .#{$prefix}-y-#{$k} {
            #{$property}-top: $v;
            #{$property}-bottom: $v;
          }
        }
      }
    }
  }
}

@mixin xs {
  @media (min-width: map-get($breakpoints, "xs")) {
    @content;
  }
}

@mixin sm {
  @media (min-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin md {
  @media (min-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin lg {
  @media (min-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin xl {
  @media (min-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin breakpoint($bp: 0) {
  @media (min-width: $bp) {
    @content;
  }
}
