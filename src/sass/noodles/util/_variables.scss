@use "sass:math";

//colours
$white: #ddd !default;
$light-gray: #d9d9d9 !default;
$black: #161616 !default;
$green: #72db31 !default;
$red: darkred !default;
$light-red: salmon !default;
$orange: #e77236 !default;
$blue: #326dee !default;
$pink: #ffd7ba !default;

//theme
$status: (
  "primary": $orange,
  "secondary": $light-red,
  "success": $green,
  "error": $red,
  "info": $blue,
  "inactive": $light-gray,
);

$palette: (
  "blue": $blue,
  "red": $red,
  "yellow": #e6e619,
  "green": #19e635,
  "orange": $orange,
  "purple": #9900ff,
  "gray": #808080,
  "black": $black,
  "white": $white,
  "pink": $pink,
);

$alignment: (
  "margin": "margin",
  "padding": "padding",
);

//sizing
$base-width: 80vw !default;
$min-width: 16px !default;
$base-height: 80vh !default;
$min-height: 16px !default;

// spacing
$base-padding: 0.75rem !default;
$base-margin: 0.75rem !default;
$base-gap: 10px !default;

// borders
$base-border-thickness: 1px !default;
$base-border-radius: 20px !default;

// box-shadow
$base-box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.1) !default;

// font sizes
$base-letter-spacing: 0.1rem !default;
$letter-spacing: 0.6rem !default;
$base-font-size: 1rem !default;
$font-size-sm: $base-font-size * 0.75 !default;
$font-size-lg: $base-font-size * 1.25 !default;
$font-size-xl: $base-font-size * 1.75 !default;
$font-size-xxl: $base-font-size * 2.5 !default;

$breakpoints: (
  "sm": 320px,
  "md": 375px,
  "lg": 425px,
  "tablet": 768px,
  "hd": 1024px,
  "uhd": 1440px,
  "uuhd": 2560px,
);

$utilities: (
  "font-size": (
    "prefix": "font",
    "values": (
      "half": math.div($base-font-size, 2),
      "0": 0,
      "sm": $font-size-sm,
      "md": $base-font-size,
      "lg": $font-size-lg,
      "xl": $font-size-xl,
      "xxl": $font-size-xxl,
    ),
  ),
  "font-weight": (
    "prefix": "weight",
    "values": (
      "100": 100,
      "600": 600,
      "900": 900,
      "bold": bold,
    ),
  ),
  "width": (
    "prefix": "w",
    "values": (
      "max": 100%,
      "half": 50%,
      "third": 33%,
      "sixth": 66%,
      "min": $base-width,
      "fit": fit-content,
      "0": 0,
      "base": $min-width,
    ),
  ),
  "position": (
    "prefix": "pos",
    "values": (
      "absolute": absolute,
      "relative": relative,
      "fixed": fixed,
    ),
  ),
  "letter-spacing": (
    "prefix": "kern",
    "values": (
      "base": $base-letter-spacing,
    ),
  ),
  "height": (
    "prefix": "h",
    "values": (
      "0": 0,
      "base": $base-height,
    ),
  ),
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "base": $base-padding,
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "base": $base-padding,
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "base": $base-padding,
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "base": $base-padding,
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "base": $base-padding,
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "auto": auto,
      "default": $base-margin + 0.25,
      "0": 0,
      "base": $base-margin,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "auto": auto,
      "default": $base-margin + 0.25,
      "0": 0,
      "base": $base-margin,
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "auto": auto,
      "default": $base-margin + 0.25,
      "0": 0,
      "base": $base-margin,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "auto": auto,
      "default": $base-margin + 0.25,
      "0": 0,
      "base": $base-margin,
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "auto": auto,
      "default": $base-margin + 0.25,
      "0": 0,
      "half": $base-margin - 0.25,
      "base": $base-margin,
    ),
  ),
  "opacity": (
    "prefix": "o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    ),
  ),
  "display": (
    "prefix": "d",
    "values": (
      "none": none,
      "block": block,
      "flex": flex,
      "inline": inline,
      "inline-block": inline-block,
    ),
  ),
  "flex-direction": (
    "prefix": "flex",
    "values": (
      "row": row,
      "col": column,
      "reverse": reverse,
      "col-rev": reverse,
    ),
  ),
  "flex-wrap": (
    "prefix": "flex",
    "values": (
      "wrap": wrap,
      "nowrap": nowrap,
      "reverse": wrap-reverse,
    ),
  ),
  "overflow": (
    "prefix": "flow",
    "values": (
      "auto": auto,
      "hide": hidden,
      "scroll": scroll,
      "show": visible,
    ),
  ),
  "justify-content": (
    "prefix": "justify",
    "values": (
      "center": center,
      "left": left,
      "right": right,
      "around": space-around,
      "between": space-between,
      "even": space-evenly,
    ),
  ),
  "align-items": (
    "prefix": "align",
    "values": (
      "center": center,
      "start": flex-start,
      "end": flex-end,
      "self-end": self-end,
    ),
  ),
  "text-align": (
    "prefix": "text",
    "values": (
      "center": center,
      "left": left,
      "right": right,
      "justify": justify,
      "init": initial,
    ),
  ),
  "text-wrap": (
    "prefix": "text",
    "values": (
      "wrap": wrap,
      "no-wrap": nowrap,
    ),
  ),
  "gap": (
    "prefix": "gap",
    "values": (
      "0": 0,
      "1": $base-gap,
      "2": $base-gap * 2,
      "3": $base-gap * 2.5,
      "4": $base-gap * 3.5,
      "5": $base-gap * 5,
      "6": $base-gap * 6,
    ),
  ),
);

@mixin sm {
  @media (min-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin md {
  @media (min-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin lg {
  @media (min-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: map-get($breakpoints, "tablet")) {
    @content;
  }
}

@mixin hd {
  @media (min-width: map-get($breakpoints, "hd")) {
    @content;
  }
}

@mixin uhd {
  @media (min-width: map-get($breakpoints, "uhd")) {
    @content;
  }
}

@mixin uuhd {
  @media (min-width: map-get($breakpoints, "uuhd")) {
    @content;
  }
}

@mixin breakpoint($bp: 0) {
  @media (min-width: $bp) {
    @content;
  }
}
